@model BethesdaCarRental5.Models.RentalOrder

@{
    ViewBag.Title = "Rental Order Start-Up";
}

<h2 class="common-font text-center bold blue">Rental Order Start-Up</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="containment">
        <div class="form-horizontal common-font">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="heading"><p class="common-font text-center something">Rental Order Processed By</p></div>
            <div class="form-group">
                <label for="rsProcessedBy" class="common-font control-label col-md-3">Employee #</label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.RentStartProcessedBy,
                                    new { htmlAttributes = new { @class = "form-control", id = "rsProcessedBy" } })
                    @Html.ValidationMessageFor(model => model.RentStartProcessedBy, "", new { @class = "text-danger" })
                </div>
                <div class="common-font col-md-6">
                    <span id="employeeDetails"></span>
                </div>
            </div>

            <div class="heading"><p class="common-font text-center">Customer Information</p></div>

            <div class="form-group">
                @Html.LabelFor(model => model.DriversLicenseNumber, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DriversLicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DriversLicenseNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label common-font col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label common-font col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label common-font col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZIPCode, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ZIPCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZIPCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="heading"><p class="common-font text-center">Car Selected</p></div>

            <div class="form-group">
                @Html.LabelFor(model => model.TagNumber, htmlAttributes: new { @class = "control-label common-font col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TagNumber, new { htmlAttributes = new { @class = "form-control", id = "tagNbr" } })
                    @Html.ValidationMessageFor(model => model.TagNumber, "", new { @class = "text-danger" })
                </div>
                <div class="common-font col-md-6">
                    <span id="carDetails"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CarCondition, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownList("CarCondition", ViewData["CarCondition"] as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CarCondition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TankLevel, htmlAttributes: new { @class = "common-font control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownList("TankLevel", ViewData["TankLevel"] as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TankLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MileageStart, htmlAttributes: new { @class = "control-label common-font col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.MileageStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MileageStart, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3 common-font" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RateApplied, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.RateApplied, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RateApplied, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxRate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.TaxRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-7">
                    @Html.DropDownList("OrderStatus", ViewData["OrderStatus"] as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-6 control-label">
                    @Html.ActionLink("Rental Orders", "Index")
                </label>
                <div class="col-md-6">
                    <input type="submit" value="Save Rental Order" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(document).ready(function () {
        $("#rsProcessedBy").blur(function () {
            $.ajax({
                method: "GET",
                dataType: "json",
                url: "/api/Employees",
                success: function (data) {
                    $.each(data, function (index, person) {
                        if (person["EmployeeNumber"] === $("#rsProcessedBy").val()) {
                            $("#employeeDetails").text(person["FirstName"] + " " + person["LastName"] + " (" + person["EmploymentTitle"] + ")");
                        }
                    });
                }
            });
        });

        $("#tagNbr").blur(function () {
            $.ajax({
                method: "GET",
                dataType: "json",
                url: "/api/Cars",
                success: function (data) {
                    $.each(data, function (index, car) {
                        if (car["TagNumber"] === $("#tagNbr").val()) {
                            $("#carDetails").text(car["Make"] + " " + car["Model"] + " (" + car["Passengers"] + " passengers)");
                        }
                    });
                }
            });
        });
    });
    </script>
}
